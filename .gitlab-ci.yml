image: docker:latest
services:
  - name: docker:dind
    alias: staticapp    

stages:
  - Build
  - Test acceptation
  - Release image
  - Deploy review 
  - Stop review 

#before_script:
#  - docker info

docker-build:
  stage: Build
  script:
    - docker build --pull -t staticapp .
    - docker save staticapp > staticapp.tar
  artifacts:
    paths:
      - staticapp.tar #sauvergarde de rendu du build sour forme d'artifact
  tags:
    - carlinfg

test-acceptation:
  stage: Test acceptation
  script:
    - docker load < staticapp.tar
    - docker run --rm -d -p 80:80 --name staticapp-test staticapp:latest
    - sleep 5
    - apk --no-cache add curl
    - ip_address=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' staticapp-test)
    - curl "http://staticapp" | grep -i "DIMENSION"
    - echo "Adresse IP du conteneur  $ip_address"
  tags:
    - carlinfg


release-image:
  stage: Release image
  script: 
    - docker load < staticapp.tar
    #ajout des variable d'environnement permettant de tagger la release
    - docker tag staticapp "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker tag staticapp "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
    #configuration de login au registry gitlab
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker push "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
  tags:
    - carlinfg

deploy-review:
  stage: Deploy review
  only:
    - merge_requests
  environment:
    name: review/$CI_COMMIT_REF_NAME
    #url: ${REVIEW_LINK}
    on_stop: stop-review
  script:
    - apk --no-cache add npm
    - npm install -g heroku
    # Authentification sur le registre Heroku
    - echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com #
    # Pull de l'image depuis le registry GitLab
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME #
    #- heroku container:login
    - APP_NAME=staticapp-$CI_COMMIT_REF_NAME
    # Tag de l'image pour le déploiement sur Heroku
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME registry.heroku.com/$APP_NAME/web #
    - "[[ ${#APP_NAME} -gt 31 ]] && echo 'the name of the heroku application you want to create is longer than 30 characters' && exit 1"
    # Push de l'image taggée vers le registre Heroku
    - docker push registry.heroku.com/$APP_NAME/web #
    # Déploiement de l'image sur Heroku
    - docker container stop $(docker container ls -q --filter "ancestor=registry.heroku.com/$APP_NAME/web")
    - docker container rm $(docker container ls -q --filter "ancestor=registry.heroku.com/$APP_NAME/web")
    - heroku container:release web --app $APP_NAME
    #- heroku create $APP_NAME || echo "project already exist"
    #- heroku container:push -a $APP_NAME web
    #- heroku container:release -a $APP_NAME web
  tags:
    - carlinfg

stop-review:
  stage: Stop review
  variables:
    GIT_STRATEGY: none
  only:
    - merge_requests
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop #ajout de l'action stop pour la supp de l'environnement review
  script:
    - apk --no-cache add npm
    - npm install -g heroku
    - heroku container:login
    - heroku apps:destroy -a staticapp-$CI_COMMIT_REF_NAME --confirm staticapp-$CI_COMMIT_REF_NAME
  tags:
    - carlinfg