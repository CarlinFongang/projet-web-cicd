image: docker:latest

services:
  - name: docker:dind
    alias: staticapp    

stages:
  - build
  - test-acceptation
  - Release image

before_script:
  - docker info

docker-build:
  stage: build
  script:
    - docker build --pull -t staticapp .
    - docker save staticapp > staticapp.tar
  artifacts:
    paths:
      - staticapp.tar 

test-acceptation:
  stage: test-acceptation
  script:
    - docker load < staticapp.tar
    - docker run --rm -d -p 80:80 --name staticapp-test staticapp:latest
    - sleep 5
    - apk --no-cache add curl
    - ip_address=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' staticapp-test)
    - echo "Adresse IP du conteneur  $ip_address"
    - curl "http://staticapp" | grep -i "DIMENSION"
    - docker rm -vf staticapp-test && echo "Conteneur nettoyÃ©"

release image:
  stage: Release image
  script: 
    - docker load < staticapp.tar
    #ajout des variable d'environnement permettant de tagger la release
    - docker tag staticapp "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker tag staticapp "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
    #configuration de login au registry gitlab
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker push "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"

