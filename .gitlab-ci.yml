image: docker:latest

services:
  - name: docker:dind
    alias: staticapp    

stages:
  - build
  - test-acceptation

before_script:
  - docker info

docker-build:
  stage: build
  script:
    - docker build -t staticapp .
    - docker save staticapp > staticapp.tar
  artifacts:
    paths:
      - staticapp.tar 

test-acceptation:
  stage: test-acceptation
  script:
    #- docker info  # Vérifiez si le démon Docker est disponible
    #- docker rmi -f staticapp 2>/dev/null || echo "Image déjà supprimée" 
    - docker load < staticapp.tar
    #- docker rm -vf staticapp-test 2>/dev/null || echo "Conteneur déjà nettoyé"
    #- docker run -d -p 80:80 -e PORT=80 --name staticapp-test1 staticapp
    - docker run -d -p 80:80 --name staticapp-test staticapp:latest
    - sleep 5
    #- docker ps
    - apk --no-cache add curl
    - ip_address=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' staticapp-test)
    - echo "Adresse IP du conteneur  $ip_address"
    - curl "http://$ip_address:80" | grep "DIMENSION"
    #- curl "/var/www/html/" | grep "DIMENSION"
    - docker rm -vf staticapp-test && echo "Conteneur nettoyé"